<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd xmlns="https://pmd-code.org/schema/cpd-report"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         pmdVersion="7.7.0"
         timestamp="2024-11-18T16:13:36.4377053+01:00"
         version="1.0.0"
         xsi:schemaLocation="https://pmd-code.org/schema/cpd-report https://pmd.github.io/schema/cpd-report_1_0_0.xsd">
   <file path="C:\Users\espac\lab09\92-simple-mvc-io\src\main\java\it\unibo\mvc\Controller.java"
         totalNumberOfTokens="131"/>
   <file path="C:\Users\espac\lab09\92-simple-mvc-io\src\main\java\it\unibo\mvc\SimpleGUI.java"
         totalNumberOfTokens="230"/>
   <file path="C:\Users\espac\lab09\92-simple-mvc-io\src\main\java\it\unibo\mvc\SimpleGUIWithFileChooser.java"
         totalNumberOfTokens="404"/>
   <duplication lines="42" tokens="125">
      <file begintoken="223"
            column="60"
            endcolumn="29"
            endline="73"
            endtoken="347"
            line="32"
            path="C:\Users\espac\lab09\92-simple-mvc-io\src\main\java\it\unibo\mvc\SimpleGUI.java"/>
      <file begintoken="628"
            column="10"
            endcolumn="29"
            endline="105"
            endtoken="752"
            line="67"
            path="C:\Users\espac\lab09\92-simple-mvc-io\src\main\java\it\unibo\mvc\SimpleGUIWithFileChooser.java"/>
      <codefragment><![CDATA[        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        /*
        * Handlers
        */
        save.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String content = tArea.getText();
                controller.writeOnFile(content);
            }
        });
    }
    private void display() {
        /*
            * Make the frame one fifth the resolution of the screen. This very method is
            * enough for a single screen setup. In case of multiple monitors, the
            * primary is selected. In order to deal coherently with multimonitor
            * setups, other facilities exist (see the Java documentation about this
            * issue). It is MUCH better than manually specify the size of a window
            * in pixel: it takes into account the current resolution.
            */
        final Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        final int sw = (int) screen.getWidth();
        final int sh = (int) screen.getHeight();
        frame.setSize(sw / PROPORTION, sh / PROPORTION);
        /*
            * Instead of appearing at (0,0), upper left corner of the screen, this
            * flag makes the OS window manager take care of the default positioning
            * on screen. Results may vary, but it is generally the best choice.
            */
        frame.setLocationByPlatform(true);
        /*
            * OK, ready to push the frame onscreen
            */
        frame.setVisible(true);
    }
    /**
     * Lanch the application.
     * @param args
     */
    public static void main(final String[] args) {
        final var view = new SimpleGUI(new Controller());
]]></codefragment>
   </duplication>
</pmd-cpd>
